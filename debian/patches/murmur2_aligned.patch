Index: ninja-1.1.0/src/hash_map.h
===================================================================
--- ninja-1.1.0.orig/src/hash_map.h	2013-02-10 05:39:44.580357947 -0600
+++ ninja-1.1.0/src/hash_map.h	2013-02-10 05:41:19.921490403 -0600
@@ -18,6 +18,51 @@
 #include "string_piece.h"
 
 // MurmurHash2, by Austin Appleby
+#if defined(__sparc__) || defined(__sparc)
+static inline
+unsigned int MurmurHash2(const void * key, int len) {
+  static const unsigned int seed = 0xDECAFBAD;
+  const unsigned int m = 0x5bd1e995;
+  const int r = 24;
+
+  unsigned int h = seed ^ len;
+
+  const unsigned char * data = (const unsigned char *)key;
+
+  while(len >= 4) {
+    unsigned int k;
+
+    k  = data[0];
+    k |= data[1] << 8;
+    k |= data[2] << 16;
+    k |= data[3] << 24;
+
+    k *= m;
+    k ^= k >> r;
+    k *= m;
+
+    h *= m;
+    h ^= k;
+
+    data += 4;
+    len -= 4;
+  }
+
+  switch(len) {
+    case 3: h ^= data[2] << 16;
+    case 2: h ^= data[1] << 8;
+    case 1: h ^= data[0];
+            h *= m;
+  }
+
+  h ^= h >> 13;
+  h *= m;
+  h ^= h >> 15;
+
+  return h;
+}
+
+#else // normal murmur2
 static inline
 unsigned int MurmurHash2(const void* key, size_t len) {
   static const unsigned int seed = 0xDECAFBAD;
@@ -46,6 +91,7 @@ unsigned int MurmurHash2(const void* key
   h ^= h >> 15;
   return h;
 }
+#endif
 
 #ifdef _MSC_VER
 #include <hash_map>
